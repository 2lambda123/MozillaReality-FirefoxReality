apply plugin: 'com.android.application'

android {
    compileSdkVersion 26
    defaultConfig {
        applicationId "org.mozilla.vrbrowser"
        minSdkVersion 24
        targetSdkVersion 26
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        ndk {
            abiFilters "armeabi-v7a"
        }
        externalNativeBuild {
            cmake {
                cppFlags "-std=c++14" +
                         " -I" + file("src/main/cpp").absolutePath +
                         " -I" + file("src/main/cpp/vrb/include").absolutePath
                arguments "-DANDROID_STL=c++_shared"
            }
        }
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    externalNativeBuild {
        cmake {
            path "CMakeLists.txt"
        }
    }



    productFlavors {
        googlevr {
            externalNativeBuild {
                cmake {
                    cppFlags " -I" + file("${project.rootDir}/gvr-android-sdk/libraries/headers").absolutePath
                    arguments "-DVR_SDK_LIB=googlevr-lib"
                }
            }
        }
        oculusvr {
            externalNativeBuild {
                cmake {
                    cppFlags " -I" + file("${project.rootDir}/third_party/ovr_mobile/VrApi/Include").absolutePath
                    arguments "-DVR_SDK_LIB=oculusvr-lib"
                }
            }
        }
        svr {
            externalNativeBuild {
                cmake {
                    cppFlags " -I" + file("${project.rootDir}/third_party/svr/public").absolutePath
                    arguments "-DVR_SDK_LIB=svr-lib"
                }
            }
        }
        wavevr {
            externalNativeBuild {
                cmake {
                    cppFlags " -I" + file("${project.rootDir}/third_party/wavesdk/build/wvr_client/include").absolutePath
                    arguments "-DVR_SDK_LIB=wavevr-lib", "-DWAVEVR=ON"
                }
            }
        }
    }

    flavorDimensions "default"

    sourceSets {
        main {
            java.srcDirs = [
                    'app',
                    'src/main/cpp/vrb/android/java'
            ]
        }

        oculusvr {
            jniLibs.srcDirs = ["${project.rootDir}/third_party/ovr_mobile/VrApi/Libs"]
        }

        svr {
            jniLibs.srcDirs = ["${project.rootDir}/third_party/svr/libs"]
        }

        wavevr {
            java.srcDirs = [
                    'src/wavevr/java'
            ]
            jniLibs.srcDirs = ["${project.rootDir}/third_party/wavesdk/build/wvr_client/jni"]
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'com.android.support:appcompat-v7:26.1.0'
    implementation 'com.android.support.constraint:constraint-layout:1.0.2'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.1'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.1'
    implementation project(':geckoview-withGeckoBinaries')

    googlevrImplementation 'com.google.vr:sdk-base:1.120.0'
    svrImplementation fileTree(dir: "${project.rootDir}/third_party/svr/", include: ['*.jar'])
    wavevrImplementation project(':wavesdk')
}
